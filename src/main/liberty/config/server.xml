<?xml version="1.0" encoding="UTF-8"?>
<!-- server.xml: https://openliberty.io/docs/latest/reference/config/server-configuration-overview.html#server-xml -->
<server>
  <featureManager>
    <feature>webProfile-9.1</feature>
    <feature>microProfile-5.0</feature>
  </featureManager>

  <!--_____________
      |           |
      | Variables |
      |___________|
                   -->

  <!--
    These are default values used through the configuration. They will
    be overridden by the Maven build in 
    configDropins/overrides/liberty-plugin-variable-config.xml
    Override with `mvn -Dliberty.var.${NAME}`.
    When changing a default here, it's usually good to change it in
    pom.xml also.
  -->
  <variable name="APP_NAME" defaultValue="libertydiag.war" />
  <variable name="HTTP_PORT" defaultValue="9080" />
  <variable name="HTTPS_PORT" defaultValue="9443" />
  <variable name="TRACE_SPECIFICATION" defaultValue="*=info" />
  <variable name="MAX_TRACE_SIZE_MB" defaultValue="100" />
  <variable name="MAX_TRACE_SIZE_COUNT" defaultValue="2" />
  <variable name="MAX_CONCURRENT_THREADS" defaultValue="50" />
  <variable name="BASIC_ADMIN_PASSWORD" defaultValue="password" />
  <variable name="BASIC_USER_PASSWORD" defaultValue="password" />

  <!--
    In a container environment, X_LOG_DIR points to /logs/, but it doesn't 
    exist in a non-container environment, so we point the default to the normal 
    usr/servers/${SERVER}/logs/ directory. Then we can use this variable for
    things like the acccess log.
  -->
  <variable name="X_LOG_DIR" defaultValue="${server.output.dir}/logs" />

  <!--____________________
      |                  |
      | HTTP(S) endpoint |
      |__________________|
                          -->

  <!-- host="*" allows access from a remote client -->
  <httpEndpoint
    id="defaultHttpEndpoint"
    host="*"
    httpPort="${HTTP_PORT}"
    httpsPort="${HTTPS_PORT}"
  >
    <!-- https://openliberty.io/docs/latest/access-logging.html -->
    <accessLogging
      filepath="${X_LOG_DIR}/http_access.log"
      maxFileSize="${MAX_TRACE_SIZE_MB}"
      maxFiles="${MAX_TRACE_SIZE_COUNT}"
      logFormat="%h %u %t &quot;%r&quot; %s %b %D %{R}W %p %{remote}p"
    />
  </httpEndpoint>

  <!-- 
    persistTimeout: we're assuming LAN-only, pooled connections
    https://publib.boulder.ibm.com/httpserv/cookbook/WebSphere_Application_Server-WAS_Liberty.html#WebSphere_Application_Server_Liberty-HTTP-Keep_Alive_Connections
  -->
  <httpOptions
    persistTimeout="575h"
  />

  <!--__________________________
      |                        |
      | Security configuration |
      |________________________|
                                -->

  <!-- The <keystore /> is specified in configDropins/defaults/keystore.xml -->

  <!--
    Default SSL configuration enables trust for default certificates from the
    Java runtime.
  -->
  <ssl id="defaultSSLConfig" trustDefaultCerts="true" />

  <basicRegistry id="basic" realm="BasicRealm">
    <user name="admin" password="${BASIC_ADMIN_PASSWORD}" />
    <user name="user1" password="${BASIC_USER_PASSWORD}" />
    <group name="Users">
      <member name="user1" />
    </group>
    <group name="Administrators">
      <member name="admin" />
    </group>
  </basicRegistry>
  
  <administrator-role>
    <group>Administrators</group>
  </administrator-role>

  <!--_____________________________
      |                           |
      | Application configuration |
      |___________________________|
                                   -->

  <!-- Automatically expand WAR files and EAR files -->
  <applicationManager autoExpand="true" />

  <!-- Configures the application on a specified context root -->
  <webApplication contextRoot="/" location="${APP_NAME}">
    <application-bnd>
      <security-role name="Administrators">
        <group name="Administrators" />
      </security-role>
      <security-role name="Users">
        <group name="Users" />
      </security-role>
    </application-bnd>
  </webApplication>

  <!--
    In constrained environments, it might reasonably take up to
    about a minute for the application to start.
  -->
  <applicationManager startTimeout="60s" />

  <!--_______________________
      |                     |
      | Other configuration |
      |_____________________|
                             -->

  <!--
    Decide whether administrator authentication (administrator-role) is required
    for /metrics. HTTPS may still be used without authentication.
  -->
  <mpMetrics authentication="false" />

  <!--
    By default, without a filter attribute on <monitor />, mpMetrics enables all
    monitor-1.0 metrics. The list of metrics may also be specified explicitly with
    a comma-separated list as is done below. Alternatively, a space (" ") for the
    filter attribute disables all but the base and app metrics which has less
    performance overhead.
  -->
  <monitor filter="JVM,ThreadPool,WebContainer,Session,ConnectionPool,REST" />

  <!-- https://openliberty.io/docs/latest/log-trace-configuration.html -->
  <!--
    For common specifications, see https://www.ibm.com/support/pages/set-trace-and-get-full-dump-websphere-liberty
    HTTP (simple): *=info:com.ibm.ws.webcontainer*=all:com.ibm.wsspi.webcontainer*=all:HTTPChannel=all:GenericBNF=all:HTTPDispatcher=all
    
    We hide the message CWMOT0000E: Lookup of the application name in JNDI did not return a value. A default name is used for Opentracing service name.
    The reason is convoluted: We want to use Jakarta EE Web profile instead of Full profile. This means we can't use
    ManagedExecutorService. Similarly, we can't use ManagedExecutor from mpContextPropagation because we only
    want to use microProfile-5.0 which doesn't include mpContextPropagation. The LoadRunner uses the Jakarta RESTful Web Services
    client and thus OpenTracing tries to hook in. Therefore, when we execute the load runner, we have to just use a vanilla
    ExecutorService which doesn't have any MP application context that OpenTracing can use to look up the application name.
  -->
  <logging
    traceSpecification="${TRACE_SPECIFICATION}"
    maxFileSize="${MAX_TRACE_SIZE_MB}"
    maxFiles="${MAX_TRACE_SIZE_COUNT}"
    hideMessage="CWMOT0000E"
  />

  <!--
    If the applications don't use resources in META-INF/resources directories of embedded JAR files
    https://www.ibm.com/docs/en/was-liberty/nd?topic=tuning-liberty
  -->
  <webContainer skipMetaInfResourcesProcessing="true" />
</server>
