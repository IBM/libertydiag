<?xml version="1.0" encoding="UTF-8"?>
<server>
  <!-- Optional usage of requestTiming -->
  <!-- https://openliberty.io/docs/latest/slow-hung-request-detection.html -->
  <featureManager><feature>requestTiming-1.0</feature></featureManager>
  <requestTiming
    slowRequestThreshold="60s"
    hungRequestThreshold="300s"
    sampleRate="1"
  />

  <!--
    Log into the admin center at /adminCenter/ and a user name and password based on administrator-role in server.xml
    https://openliberty.io/docs/latest/admin-center.html
  -->
  <featureManager><feature>adminCenter-1.0</feature></featureManager>

  <!-- Allow editing server.xml through the adminCenter -->
  <remoteFileAccess>
    <writeDir>${server.config.dir}</writeDir>
  </remoteFileAccess>

  <!--
    Local JMX connector:
    1. echo $(cat wlp/usr/servers/libertydiagServer/logs/state/com.ibm.ws.jmx.local.address)
    2. Start JConsole, select Remote process, paste the contents from step 1, click Insecure Connection
    https://www.ibm.com/docs/en/was-liberty/core?topic=jmx-configuring-local-connection-liberty
  -->
  <featureManager><feature>localConnector-1.0</feature></featureManager>

  <!--
    Remote JMX connector:
    1. echo $(cat wlp/usr/servers/libertydiagServer/logs/state/com.ibm.ws.jmx.rest.address)
    2. Extract the certificate from that host and port:
       openssl s_client -connect localhost:9443 </dev/null > server.cert
    3. Import the certificate into a PKCS12 trust store:
       keytool -import -noprompt -trustcacerts -alias default -file server.cert -keystore truststore.p12 -storepass password
    4. Start JConsole with the Liberty restConnector.jar on the classpath and information about the trust store
       jconsole \
         -debug \
         -J-Djava.class.path=$JAVA_HOME/lib/jconsole.jar:$JAVA_HOME/lib/tools.jar:$LIBERTY/wlp/clients/restConnector.jar \
         -J-Djavax.net.ssl.trustStore=truststore.p12 \
         -J-Djavax.net.ssl.trustStorePassword=password \
         -J-Djavax.net.ssl.trustStoreType=pkcs12
    5. Select remote process, paste the contents from step 1, set a user name and password based on administrator-role in server.xml, and connect
    https://www.ibm.com/docs/en/was-liberty/core?topic=jmx-configuring-secure-connection-liberty
  -->
  <featureManager><feature>restConnector-2.0</feature></featureManager>
  
  <!--
  This is part of the concurrent-1.0 feature but this is a part
  of JakartaEE Full Profile whereas we want to just use the Web Profile.
  We'll use an alternative, vanilla executor service in the app.
   
  <managedExecutorService jndiName="concurrent/executorService1">
    <contextService>
      <jeeMetadataContext />
    </contextService>
    <concurrencyPolicy max="${MAX_CONCURRENT_THREADS}" />
  </managedExecutorService>
  -->
</server>
